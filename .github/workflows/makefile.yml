# This is a basic workflow to help you get started with the Run C/C++test action for Make-based project.
name: C/C++test with Make

on:
  # Triggers the workflow on push or pull request events but only for the master (main) branch.
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  run-cpptest-make:
    name: Analyze project with C/C++test

    # Specifies the type of runner that the job will run on.
    runs-on: self-hosted

    # Specifies required permissions for upload-sarif action
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:

    # Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure project
      run: cmake -DCPPTEST_COVERAGE=ON -S . -B build

    - name: Build project
      run: cmake --build build

    - name: Run app
      run: printf '3\n4\n9\n' | build/timer

    - name: Collect coverage
      run: cmake --build build --target cpptestcov-compute

    - name: Trace project build for static analysis
      run: cpptesttrace make clean all

    # Runs code analysis with C/C++test.
    - name: Run static analysis
      # Use the 'run-cpptest-action' GitHub action.
      uses: parasoft/run-cpptest-action@2.0.2
      with:
        compilerConfig: 'gcc_13-64'
        testConfig: 'builtin://Recommended Rules'
        input: 'cpptestscan.bdf'

    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: CpptestReports
        path: |
          reports/*.*
          .coverage/lastrun/*.*

